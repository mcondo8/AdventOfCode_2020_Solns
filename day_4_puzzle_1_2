import re

def check_string(req_vals, passport_data):
    for val in req_vals:
        if passport_data.find(val) < 0:
            print("Passport: ", passport_data, " failed - missing ", val)
            # exit on the first failure, no need to continue checking
            return 0
    return 1


# Hand in a string and a list of regex. If any regex fail, the passport is invalid
def check_string_regex(req_vals, passport_data):
    rtn = 1
    for val in req_vals:
        test_string = r"^.*" + val + r" .*$"
        res = re.match(test_string, passport_data)

        if not res:
            # fail at this point
            print("Passport: ", passport_data, " fails test ", test_string)
            rtn = 0
            #return 0
    return rtn


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    valid_count = 0
    # Patterns for puzzle 1
    # required_fields = ["byr", "iyr", "eyr", "hgt", "ecl", "pid", "hcl"]

    # Regex for puzzle 2
    required_fields = ["byr:(192[0-9]|19[3-9][0-9]|200[0-2])", "iyr:(201[0-9]|2020)", "eyr:(202[0-9]|2030)", "hgt:((1[5-8][0-9]|19[0-3])cm|(59|6[0-9]|7[0-6])in)", "ecl:(amb|blu|brn|gry|grn|hzl|oth)", "pid:[0-9]{9}", "hcl:#[0-9a-f]{6}"]
    passport_file = open("passports.txt")
    current_passport = ""
    while True:
        line = passport_file.readline()

        if not line:
            #valid_count += check_string(required_fields, current_passport)
            valid_count += check_string_regex(required_fields, current_passport + " ")
            current_passport = ""
            break
        if line == "\n":
            # this means the end of a single passport
            #valid_count += check_string(required_fields, current_passport)
            valid_count += check_string_regex(required_fields, current_passport + " ")
            current_passport = ""
        else:
            # continue assembling the current passport
            current_passport += line.replace("\n", " ")
    print(valid_count, " valid passports found")
# See PyCharm help at https://www.jetbrains.com/help/pycharm/
